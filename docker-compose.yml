version: '3.9'

networks:
  br-network:
    name: br-network
    driver: bridge

services:

  nginx:
    image: nginx:1.27.0-alpine3.19
    container_name: br_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/nginx/certificate.crt:/etc/nginx/certificate.crt:ro
      - /etc/nginx/private.key:/etc/nginx/private.key:ro
    networks:
      - br-network
    depends_on:
      - app
      - grafana


  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    container_name: br_nginx_exporter
    ports:
      - "9113:9113"
    environment:
      - NGINX_STATUS_URL=http://br_nginx/nginx_status
    networks:
      - br-network
    depends_on:
      - nginx

  app: &app
    build:
      context: .
      dockerfile: compose/Dockerfile
    container_name: br_app
    command: /start
    restart: always
    env_file:
      - env
    volumes:
      - ./app:/opt/br/
    depends_on:
      - redis
      - postgres
    networks:
      - br-network

  postgres:
    image: postgres:13-alpine
    container_name: br_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - env
    environment:
      - TZ=Europe/Moscow
    networks:
      - br-network

  redis:
    image: redis:7.2.5-alpine3.19
    container_name: br_redis
    restart: always
    networks:
      - br-network
    volumes:
      - redis_data:/data

  celery_worker:
    <<: *app
    container_name: br_celery_worker
    restart: always
    env_file:
      - env
    volumes:
      - ./app:/opt/br/
    ports: [ ]
    command: /start-celeryworker
    networks:
      - br-network
    depends_on:
      - redis
      - postgres

  celery_beat:
    <<: *app
    container_name: br_celery_beat
    restart: always
    env_file:
      - env
    volumes:
      - ./app:/opt/br/
    ports: [ ]
    command: /start-celerybeat
    networks:
      - br-network
    depends_on:
      - redis
      - postgres

  flower:
    <<: *app
    container_name: br_flower
    command: /start-flower
    restart: always
    env_file:
      - env
    networks:
      - br-network
    ports:
      - "127.0.0.1:5555:5555"
    depends_on:
      - celery_worker
      - celery_beat
      - redis

  prometheus:
    image: prom/prometheus:latest
    container_name: br_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - br-network
    depends_on:
      - nginx_exporter

  grafana:
    image: grafana/grafana:latest
    container_name: br_grafana
    ports:
      - "3000:3000"
    networks:
      - br-network
    depends_on:
      - prometheus
    environment:
      - GF_SERVER_ROOT_URL=https://45.12.19.157/grafana/

volumes:
  postgres_data: {}
  redis_data: {}