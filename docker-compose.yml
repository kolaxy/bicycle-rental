version: '3.9'

networks:
  br-network:
    name: br-network
    driver: bridge

services:
  app: &app
    build:
      context: .
      dockerfile: compose/Dockerfile
    container_name: br_app
    command: /start
    restart: always
    env_file:
      - env
    volumes:
      - ./app:/opt/br/
    depends_on:
      - redis
      - postgres
    networks:
      - br-network

  postgres:
    image: postgres:13-alpine
    container_name: br_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - env
    environment:
      - TZ=Europe/Moscow
    networks:
      - br-network

  redis:
    image: valkey/valkey:7.2.5-alpine3.19
    container_name: br_redis
    restart: always
    networks:
      - br-network
    volumes:
      - redis_data:/data

  celery_worker:
    <<: *app
    container_name: br_celery_worker
    restart: always
    env_file:
      - env
    volumes:
      - ./app:/opt/br/
    ports: [ ]
    command: /start-celeryworker
    networks:
      - br-network
    depends_on:
      - redis
      - postgres

  celery_beat:
    <<: *app
    container_name: br_celery_beat
    restart: always
    env_file:
      - env
    volumes:
      - ./app:/opt/br/
    ports: [ ]
    command: /start-celerybeat
    networks:
      - br-network
    depends_on:
      - redis
      - postgres

  flower:
    <<: *app
    container_name: br_flower
    command: /start-flower
    restart: always
    env_file:
      - env
    networks:
      - br-network
    depends_on:
      - celery_worker
      - celery_beat
      - redis

  nginx:
    image: nginx:1.27.0-alpine3.19
    container_name: br_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/nginx/certificate.crt:/etc/nginx/certificate.crt:ro
      - /etc/nginx/private.key:/etc/nginx/private.key:ro
      - /etc/letsencrypt/live/kolaxy.ru:/etc/letsencrypt/live/kolaxy.ru
    networks:
      - br-network
    depends_on:
      - app
      - grafana

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    container_name: br_nginx_exporter
    networks:
      - br-network
    depends_on:
      - nginx
    command:
      - -nginx.scrape-uri
      - http://br_nginx:80/nginx_status

  prometheus:
    image: prom/prometheus:latest
    container_name: br_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - br-network

  grafana:
    image: grafana/grafana:latest
    container_name: br_grafana
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - br-network
    depends_on:
      - prometheus

  grafana_datasource:
    image: grafana/grafana-image-renderer:latest
    container_name: br_grafana_renderer
    networks:
      - br-network
    depends_on:
      - grafana

  node_exporter:
    image: prom/node-exporter:latest
    container_name: br_node_exporter
    networks:
      - br-network
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"


volumes:
  postgres_data: { }
  redis_data: { }
  grafana_data: { }