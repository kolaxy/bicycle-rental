name: CI

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

  code_quality:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Check code style (flake8)
        run: |
          flake8 --config app/setup.cfg app

      - name: Check code formatting (black)
        run: |
          black --check --config app/pyproject.toml app

  test_and_coverage:
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker-compose -f local.docker-compose.yml build

      - name: Run tests and upload coverage to Codecov
        run: |
          docker-compose -f local.docker-compose.yml run --rm app sh -c "coverage run --source='.' manage.py test && coverage xml -o /opt/br/coverage.xml"

      - name: Upload coverage to Codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -f app/coverage.xml


  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deployment
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SERVER_USERNAME }}"@${{ secrets.SERVER_IP }} 'touch /opt/deploy/1'
