name: Test and Coverage

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies - NO BUILD TESTS
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: NO-BUILD - Check code style (flake8)
        run: |
          flake8 --config app/setup.cfg app

      - name: NO BUILD - Check code formatting (black check)
        run: |
          black --check --config app/pyproject.toml app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker-compose -f local.docker-compose.yml build

      - name: Run tests and coverage
        run: |
          docker-compose -f local.docker-compose.yml run --rm app sh -c "coverage run --source='.' manage.py test && coverage xml -o /code/coverage.xml"
          docker cp $(docker-compose -f local.docker-compose.yml ps -q app):/code/coverage.xml ./coverage.xml


      - name: Check code style (flake8)
        run: |
          docker-compose -f local.docker-compose.yml run --rm app flake8 .

      - name: Check code formatting (black)
        run: |
          docker-compose -f local.docker-compose.yml run --rm app black --check .

      - name: Check for PEP8 compliance (flake8)
        run: |
          docker-compose -f local.docker-compose.yml run --rm app flake8 .

      - name: Check code formatting (black)
        run: |
          docker-compose -f local.docker-compose.yml run --rm app black .

      - name: Upload coverage to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          docker cp $(docker ps -q -f name=app):/code/coverage.xml coverage.xml
          bash <(curl -s https://codecov.io/bash) -f coverage.xml

      - name: Clean up
        run: docker-compose -f local.docker-compose.yml down